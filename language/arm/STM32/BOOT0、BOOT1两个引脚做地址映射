1、STM32F103C8的启动模式
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
STM32有两个引脚用作"启动模式选择"，详情如下：
BOOT1  BOOT0      启动模式               说明
  x      0      主闪存存储器    主闪存存储器被选为启动区域
  0      1      系统存储器      系统存储器被选为启动区域
  1      1      内置SRAM        内置SRAM被选为启动区域

主闪存存储器：
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	是STM32内置的Flash，一般我们使用JTAG或者SWD模式下载程序时，就是下载到这个里
面，重启后也直接从这启动程序。

系统存储器：
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	从系统存储器启动，这种模式启动的程序功能是由厂家设置的。一般来说，这种启动
方式用的比较少。

	系统存储器是芯片内部一块特定的区域，STM32在出厂时，由ST在这个区域内部预置了
一段BootLoader，也就是我们常说的ISP程序，这是一块ROM，出厂后无法修改。

	一般来说，我们选用这种启动模式时，是为了从串口下载程序，因为在厂家提供的
BootLoader中，提供了串口下载程序的固件，可以通过这个BootLoader将程序下载到系统的
Flash中。但是这个下载方式需要以下步骤：

Step1:将BOOT0设置为1，BOOT1设置为0，然后按下复位键，这样才能从系统存储器启动BootLoader
Step2:最后在BootLoader的帮助下，通过串口下载程序到Flash中
Step3:程序下载完成后，又有需要将BOOT0设置为GND，手动复位，这样，STM32才可以从Flash中启动

	可以看到，利用串口下载程序还是比较的麻烦，需要跳帽跳来跳去的，非常的不注重
用户体验。

内置SRAM：
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	既然是SRAM，自然也就没有程序存储的能力了，这个模式一般用于程序调试。

	假如我只修改了代码中一个小小的地方，然后就需要重新擦除整个Flash，比较的费时，
可以考虑从这个模式启动代码(也就是STM32的内存中)，用于快速的程序调试，等程序调试完
成后，在将程序下载到SRAM中。

2、启动模式与存储映射
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	系统reset后PC寄存器的值是0x0，所以以上启动模式有些应该已经做了存储映射。

3、NVIC_SetVectorTable原理
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa









