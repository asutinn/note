1、构造函数与析构函数
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	都是编译器帮忙自动绑定的，析构函数可以是虚函数，所以可能会出现后绑定


构造函数：
	<1>作用：赋初值,初始化对象的数据成员,由编译器帮我们调用。
	<2>特点：①函数名和类名一样。②没有返回值。③支持有参/无参。④可以重载。
	<3>调用时机：在类的对象创建时刻,编译器帮我们调用构造函数。

	当我们自己提供了构造函数的话,编译器就不会给默认构造函数了。如图,自己调用构造函数：

https://blog.csdn.net/ljianhui/article/details/46487951
很有趣的type_info类的构造函数定义


析构函数：
	<1>作用：用于释放资源。
	<2>特点：①和类名一样,不过得在前面加上~。②无参数,无返回值。③因为无参数,无返回值,所以不可以重载。④尽量不要自己调用析构函数,但是在某些需要的时候再调用。    
	<3>调用时机：快退出函数的时候,编译器帮我们调用。


2.继承与析构函数
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	新建继承类时，先调用基类的构造函数，后调用继承类的构造函数；析构时，先调用继承类的
析构函数，后调用基类的析构函数。

什么时候需要把析构函数设置为虚函数
	当类可能会被继承时，析构函数最好设置成虚函数(多态)，不然有内存泄漏的风险。
