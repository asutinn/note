1、参考文档
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
http://www.cs.fsu.edu/~engelen/soap.html
https://www.genivia.com/dev.html



2、gsoap所有者
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	gsoap是genivia inc公司的主推产品，gsoap有三种授权方式：标准许可、商业许可、
GPLv2许可。我们当然使用了GPLv2许可。

3、gsoap版本
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

4、gsoap移植
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	见《007gsoap使用》

5、gsoap与boa


6、gsoap文档解读（很长）
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
6.1、按模块分
https://www.genivia.com/doc/guide/html/modules.html
01 Debugging and logging	This module defines compile-time flags and functions for run-time debugging and logging
02 WITH_MACRO compile-time flags	This module defines the WITH_MACRO compile-time flags to configure the engine build
03 SOAP_MACRO compile-time values	This module defines the SOAP_MACRO compile-time values to configure the engine build
04 SOAP_MACRO run-time flags	This module defines the SOAP_MACRO run-time soap_mode flags to set the engine mode
05 SOAP_MACRO run-time error codes	This module defines the SOAP_MACRO run-time soap_status error codes returned by functions and stored in soap::error
06 Context with engine state	This module defines the soap context structure with the engine state and functions to allocate, initialize, copy and delete contexts
07 Callback functions	This module defines the callback functions of the soap context to modify its behavior, as is done by plugins
08 SSL/TLS context and functions	This module defines functions to set the SSL/TLS context for HTTPS and WS-Security
09 HTTP and IO functions	This module defines functions for HTTP operations and functions for receiving and sending data
10 HTTP cookie functions	This module defines functions to set and get HTTP cookies at the server side
11 Conversion functions	This module defines conversion functions of values of various types to and from strings
12 XML namespace tables	This module defines the Namespace XML namespace structure and function to activate a table
13 Header structure and functions	This module defines the SOAP_ENV__Header structure and soap_header function to allocate the header
14 Fault structure and functions	This module defines the SOAP_ENV__Fault structure and functions to set and get fault information
15 DIME attachment functions	This module defines functions to set and get DIME attachments
16 MIME attachment functions	This module defines functions to set and get MIME/MTOM attachments
17 Plugins and plugin registry functions	This module defines plugin registry functions to register plugins
18 Thread and mutex functions	This module defines portable thread and mutex functions
19 Miscellaneous functions	This module defines other useful functions

6.1.06、Context with engine state(上下文引擎状态)
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
void soap_init2(struct soap *  soap,
		soap_mode  input_mode,
		soap_mode  output_mode)
以输入和输出soap_mode初始化一个堆上的soap上下文

6.1.09、HTTP and IO functions（HTTP和IO函数）
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	This module defines functions for HTTP operations and functions for receiving 
and sending data

	此模块定义HTTP操作函数和收发数据函数。

6.1.09.01、
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
int soap_force_closesock(struct soap *  soap)

Forcibly close the socket connection.

This function immediately closes soap::socket and should only be used when soap_closesock does not suffice. By contrast, soap_closesock gently finalizes the SSL connection, and when soap::keep_alive == 0 calls shutdown and close on soap::socket. By calling soap_force_closesock the socket is forcibly closed immediately and soap::socket is set to SOAP_INVALID_SOCKET, even when keep-alive is currently active. This function may be called multiple times but closes the socket just once if the socket connection was open. Returns the current value of soap::error to propagate the error state when used as return soap_force_closesock(soap);

6.1.09.02、
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
Serve a pending request.

This function is auto-generated by soapcpp2 and serves the pending request on soap::socket or on standard input/output soap::recvfd and soap::sendfd, e.g. for CGI and FastCGI services. Returns SOAP_OK or a soap_status error code.

This auto-generated function implements the following behavior:



6.1.12、XML namespace tables(此模块定义Namespace结构体和相关函数)
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
此模块定义了一个结构体类型：
struct  Namespace
此类型有4个字段：
const char* Namespace::id
XML namespace prefix identifier string, use NULL to indicate the end of the namespaces table.

const char* Namespace::ns
XML namespace URI string.

const char* Namespace::in
an optional XML namespace URI string pattern (* is a wildcard string and - is a 
wildcard character) that is permitted to match a parsed URI in place of the 
first URI, or NULL when not applicable（可替换的URI？？）

char* Namespace::out
Reserved for internal use by the engine only, to switch between URIs such as 
SOAP 1.1 and 1.2 namespaces based on the URI string pattern when provided in the table.（替换规则？？）

譬如soap1.1与soap1.2的SOAP-ENV的命名空间不一样
1.1 -> xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
1.2 -> xmlns:SOAP-ENV="http://www.w3.org/2003/05/soap-envelope"
nsmap文件中这么定义：
{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
但是提供soap1.1的命名空间有什么用我不知道。

一个结构体数组变量：
struct Namespace 	namespaces []
namespaces数组的最后一行需为{ NULL, NULL, NULL, NULL}

一个函数：
int soap_set_namespaces(struct soap *  soap,
		const struct Namespace *  namespaces)

soapcpp2工具会帮助我们生成*.nsmap文件，我们只需在源码中：
#include "XXXX.nsmap"
soap_set_namespaces(soap上下文指针, namespaces);
即可。



