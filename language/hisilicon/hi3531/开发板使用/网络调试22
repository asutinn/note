Hi3531 SDK 安装以及升级使用说明

第一章 Hi3531_SDK_Vx.x.x.x版本升级操作说明
	如果您是首次安装本SDK，请直接参看第2章。

第二章 首次安装SDK
1、Hi3531 SDK包位置
	在"Hi3531_V100R001C02SPC0A0/01.software/board"目录下，您可以看到一个 Hi3531_SDK_V2.0.A.0.tgz 的文件，
该文件就是Hi3531的软件开发包。

2、解压缩SDK包
	在linux服务器上（或者一台装有linux的PC上，主流的linux发行版本均可以），使用命令：tar -zxf Hi3531_SDK_Vx.x.x.x.tgz ，
解压缩该文件，可以得到一个Hi3531_SDK_Vx.x.x.x目录。

3、展开SDK包内容
	返回Hi3531_SDK_Vx.x.x.x目录，运行./sdk.unpack(请用root或sudo权限执行)将会展开SDK包打包压缩存放的内容，请按照提示完成操作。
如果您需要通过WINDOWS操作系统中转拷贝SDK包，请先运行./sdk.cleanup，收起SDK包的内容，拷贝到新的目录后再展开。

4、在linux服务器上安装交叉编译器
	1）安装uclibc交叉编译器（注意，需要有sudo权限或者root权限）：
进入Hi3531_SDK_Vx.x.x.x/osdrv/toolchain/arm-hisiv100-linux目录，运行chmod +x cross.install，然后运行./cross.install即可。
	/opt/hisi-linux/x86-arm/arm-hisiv100-linux/target/bin

	2) 安装glibc交叉编译器（注意，需要有sudo权限或者root权限）：
进入Hi3531_SDK_Vx.x.x.x/osdrv/toolchain/arm-hisiv200-linux目录，运行chmod +x cross.install，然后运行./cross.install即可。
	/opt/hisi-linux/x86-arm/arm-hisiv200-linux

	3) 执行source /etc/profile， 安装交叉编译器的脚本配置的环境变量就可以生效了，或者请重新登陆也可。


5、编译osdrv
	参见osdrv目录下readme

6、SDK目录介绍
Hi3531_SDK_Vx.x.x.x 目录结构如下：
    |-- sdk.cleanup                 # SDK清理脚本
    |-- sdk.unpack                  # SDK展开脚本
    |-- osdrv                       # 存放操作系统及相关驱动的目录
    |   |-- busybox                 # busybox源代码
    |   |-- drv                     # drv源代码
    |   |-- kernel                  # linux内核源代码
    |   |-- pub                     # 编译好的镜像、工具、drv驱动等
    |   |-- rootfs_scripts          # rootfs源代码
    |   |-- toolchain               # 交叉编译器
    |   |-- tools                   # linux工具源代码
    |   |-- uboot                   # uboot源代码
    |   `-- Makefile                # osdrv Makefile
    |-- package                     # 存放SDK各种压缩包的目录
    |   |-- osdrv.tgz               # linux内核/uboot/rootfs/tools源码压缩包
    |   |-- mpp.tgz                 # 媒体处理平台软件压缩包
    |   `-- image                   # 可供FLASH烧写的映像文件，如内核、根文件系统
    |-- scripts                     # 存放shell脚本的目录
    |-- mpp                         # 存放媒体处理平台的目录
        |-- component               # 组件源代码 
        |-- extdrv                  # 板级外围驱动源代码
        |-- include                 # 对外头文件
        |-- ko                      # 内核模块
        |-- lib                     # release版本库以及音频库
        |-- tools                   # 媒体处理相关工具
        `-- sample                  # 样例源代码