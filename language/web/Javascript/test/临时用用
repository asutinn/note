function f1()
{
	console.log("function f1");
}

function f2()
{
	console.log("function f2");
}

function f3(f7, f8)
{
	f7();
	f8();
	console.log("function f3");
}
var promise1 = new Promise(f3);
console.log(promise1);



function f1()
{
	console.log("function f1");
}

function f2()
{
	console.log("function f2");
}

function f3(f7, f8)
{
	f7();
	f8();
	console.log("function f3");
}

function f4(f18)
{
	//f18(f19, f20);
	console.log("function f4");
}

f4(function(f31, f32){f31("hello world");});



var abc = new f4(function(f31, f32){console.log(f31);});
console.log(abc);

//f4(f3, f1, f2);
//var abc = new f4(f3, f1, f2);
var abc = new f4(f3, function f31(){console.log("function f31");}, f2);
console.log(abc);











function f1()
{
	console.log("function f1");
}

function f2()
{
	console.log("function f2");
}

var promise1 = new Promise(function(f1, f2) {
  setTimeout(function() {
    //console.log("resolve is " + resolve);
    f1();
  }, 300);
});

console.log(promise1);

promise1.then(function(value) {
  console.log(value);
  // expected output: "foo"
});




abc(f3);

f3(f1, f2);

function Graph(f(resolve, reject)) {
	this.vertices = [];
	this.edges = [];
}

var g = new Graph(function(resolve, reject) {
    resolve('foo');});


function f1()
{
	console.log("function f1");
}

function f2()
{
	console.log("function f2");
}

function f3(f7, f8)
{
	f7();
	f8();
	console.log("function f3");
}

var promise1 = new Promise(function(f, reject)