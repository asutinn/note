0、参考
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa



1、SM1
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	SM1是不公开算法细节的对称算法。

	SM1密钥长度固定为128bits



2、SM2
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2.1、ECC原理
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
1)直观理解：
	如果存在等式：
		K = kG
	K、G作为公钥，k作为私钥
	加密方：明文为M，使用公钥生成两个变量C1 = M + rK, C2 = rG 其中r为随机数
	解密方：C1-kC2 = M + rK - krG(因K = kG) = M
	偷窥方：r是随机数，无法破解，k是密钥，算法选的好，破解比较难

	在国密算法里，K是公钥，k是私钥，G是基点。

2)算法选择
	选择的是椭圆曲线，有限元域

	一定要注意，这个域上的加法运算跟实数域不是一回事。
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	在椭圆曲线上定义的加法是这样的，过椭圆曲线上两点P Q与椭圆曲线交于R'点，过R'
点作垂直x轴线交于曲线于P，定义加法运算：
	P+Q = R
这个加法运算不能通过实数域的加法来进行，而是通过计算曲线与直线的交点来进行。也就
是说诸如
	C1 = M + rK
	C2 = rG
等的计算都是要通过计算交点来达到的，从这个角度说，我们必须先把明文编码到椭圆曲线
上（所以：严格来说M是明文在椭圆曲线上的编码，这种编码不是加密的内容，可以随意公开）

	对于一个特定的ECC算法，椭圆曲线是选定的，基点和阶也是选定的。


3) SM2 加密算法计算过程
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
加密者A用用户B的公钥进行加密

用户B：
	私钥：dB
	公钥：PB = [dB]G

A的计算过程：
	使用随机数发生器产生随机数k [1, n-1]
	计算曲线上一点C1，C1 =(x1, y1)= [k]G          (KG_compute_in_card)
	检测S=[h]PB，若S是无穷点，则报错退出。此步骤可以与上一步合并
	计算(x2, y2) = [k]PB                          (KP_compute_in_card)
	计算C2 = M 与或 KDF(x2||y2, klen)
	计算C3 = Hash(x2||M||y2)
	加密结果：C=C1||C3||C2





3、SM3
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
3.1、SM3简介
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	SM3是一种密码杂凑算法，可用于数字签名和验证、消息认证码生成和验证以及随机数
的生成。



4、SM4
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	SM4是一种分组对称算法，密钥长度固定为128bits。