
gpp可执行程序需要4个或者5个参数：
	0：gpp可执行程序的路径
	1：dsp可执行程序的路径
	2：buffer size
	3：循环次数，无限次时赋值0
	4：DSP id，当个dsp核时，可以没有这个参数



dsp可执行程序加载
	gpp可执行程序调用PROC_load函数来进行dsp可执行程序的加载

	EXPORT_API DSP_STATUS PROC_load 	(  	IN ProcessorId  	procId,
		IN Char8 *  	imagePath,
		IN Uint32  	argc,
		IN Char8 **  	argv
	)

	Function:
		PROC_load

	Parameters:
		procId	DSP identifier.
		imagePath	Full path to the image file to load on DSP.
		argc	Number of argument to be passed to the base image upon start.
		argv	Arguments to be passed to DSP main application.

	Returns:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
		DSP_SOK Operation successfully completed. DSP_SALREADYLOADED The specified 
	processor has already been loaded. DSP_EINVALIDARG Invalid ProcId argument. 
	DSP_EACCESSDENIED Not allowed to access the DSP. DSP_ESETUP The DSPLink driver 
	has not been setup. DSP_EATTACHED This process has not attached to the specified 
	processor. DSP_EPENDING H/W specific error. The request can�t be serviced at 
	this point of time. DSP_EFILE Invalid base image. DSP_ESIZE Size of the .args 
	section is not sufficient to hold the passed arguments. DSP_EFAIL General failure, 
	unable to load image on DSP. DSP_EWRONGSTATE Incorrect state for completing the 
	requested operation.

	Precondition:
		procId must be valid. imagePath must be a valid pointer. If argc is 0 then 
	argv must be NULL pointer. If argc is non-zero then argv must be a valid pointer. 
	PROC_setup and PROC_attach have been successful.

	Postcondition:
		None

	See also:
		PROC_attach, PROC_loadSection

	我们audio_loop中PROC_load函数argc参数是2，argv包含的两个参数是buffersize和循环次数。
这个buffersize就是gpp与dsp每次交换的字节数。

	MAU： Memory Access Unit  DSP的数据宽度

	TSKLOOP_TransferInfo告诉我们不需要每次传输固定尺寸的数据


TSKLOOP_create调用了POOL_open->POOL_alloc分配了buffer。

